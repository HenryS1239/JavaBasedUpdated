/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-11-07 09:57:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.*;;

public final class push_005fnot_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>");
      if (_jspx_meth_spring_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("</title>\r\n");
      out.write("<style>\r\n");
      out.write("\t.button {\r\n");
      out.write("\t\tbackground-color: green;\r\n");
      out.write("\t\tborder: none;\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\t\tpadding: 10px 15px;\r\n");
      out.write("\t\tmargin-top: 10 px;\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t\ttext-decoration: none;\r\n");
      out.write("\t\tdisplay: inline-block;\r\n");
      out.write("\t\tfont-size: 15px;\r\n");
      out.write("\t\tmargin: 15px 8px;\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t}\r\n");
      out.write("\t.button:disabled,\r\n");
      out.write("\t.button[disabled]{\r\n");
      out.write("\t  \tborder: 1px solid #999999;\r\n");
      out.write("\t  \tbackground-color: #cccccc;\r\n");
      out.write("\t  \tcolor: #666666;\r\n");
      out.write("\t}\r\n");
      out.write("\t.logoutLblPos {\r\n");
      out.write("\r\n");
      out.write("\t\t\tposition: fixed;\r\n");
      out.write("\t\t\tright: 10px;\r\n");
      out.write("\t\t\ttop: 5px;\r\n");
      out.write("\t\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<h1>Get Notified</h1>\r\n");
      out.write("\t\r\n");
      out.write("\t<form onclick=\"parent.location='index.html'\">\r\n");
      out.write("\t\t<label class=\"logoutLblPos\">\r\n");
      out.write("\t\t\t<input name=\"submit\" type=\"button\" id=\"logout\" class=\"button\" value=\"Log Out\">\r\n");
      out.write("\t\t</label>\r\n");
      out.write("\t</form>\r\n");
      out.write("\r\n");
      out.write("\t<form id=\"user-form\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/notify.html\" method=\"post\">\r\n");
      out.write("\t\t<div class=\"box\">\r\n");
      out.write("\t\t\t<label>User ID: </label><br />\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"userid\" name=\"userid\" autofocus/><br />\r\n");
      out.write("\t\t\t<label>Group ID: </label><br /> \r\n");
      out.write("\t\t\t<input type=\"text\" id=\"groupid\" name=\"groupid\" /><br />\r\n");
      out.write("\t\t\t<label>Option:</label><br />\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"option\" name=\"option\"/><br />\r\n");
      out.write("\t\t\t<label>Value:</label><br /> \r\n");
      out.write("\t\t\t<input type=\"text\" id=\"value\" name=\"amount\"/><br />\r\n");
      out.write("\t\t\t<br />\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<input type=\"button\" class=\"button\" id=\"notify\" value=\"Notify Me\" />\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<input type=\"button\" class=\"button\" id=\"Back\" value=\"Go Back\" onclick=\"parent.location='update.html'\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script defer src=\"");
      out.print(request.getContextPath() );
      out.write("/resources/js/main.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("var notifyButton = document.querySelector(\"#notify\");\r\n");
      out.write("var token = localStorage.getItem(\"token\");\r\n");
      out.write("var form = document.getElementById(\"user-form\");\r\n");
      out.write("notifyButton.addEventListener('click', function(event) {\r\n");
      out.write("\tvar input = document.createElement('input');//prepare a new input DOM element\r\n");
      out.write("\tinput.setAttribute('name', 'token');//set the param name\r\n");
      out.write("    input.setAttribute('value', token);//set the value\r\n");
      out.write("    input.setAttribute('type', 'text');\r\n");
      out.write("    input.setAttribute('hidden', true);\r\n");
      out.write("    form.appendChild(input);\r\n");
      out.write("    console.log()\r\n");
      out.write("\tconsole.log(\"Append Successful\");\r\n");
      out.write("    form.submit();\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f0.setParent(null);
    // /pages/push_not.jsp(16,7) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f0.setCode("login_success_title");
    int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
      if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f0.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
    }
    return false;
  }
}
